name: All tests

on:
  workflow_run:
    workflows: [Bump version]
    types:
      - completed
  workflow_dispatch:
    inputs: {}


jobs:
  test-install-on-posix:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: true
          activate-environment: ""
      - name: Install and test mcquic
        run: |
          ./install.sh
          eval "$(conda shell.bash hook)"

          conda activate mcquic

          if ! command -v mcquic &> /dev/null
          then
              exit 1
          fi
          mcquic -qp 2 assets/sample.png ./
          mcquic ./sample.mcq ./
          mcquic --help
          mcquic train --help
          mcquic validate --help
          mcquic dataset --help
          mcquic-train --help
          mcquic-validate --help
          mcquic-dataset --help
      - name: Test complete
        run: echo "All install test completed."
  test-install-on-windows:
    # The type of runner that the job will run on
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: true
          activate-environment: ""
      - name: Install mcquic
        run: |
          C:\Miniconda\shell\condabin\conda-hook.ps1
          conda init powershell
          "if (test-path $PROFILE.CurrentUserAllHosts) { & $PROFILE.CurrentUserAllHosts}"
          'y' | powershell -ExecutionPolicy ByPass -file "./install.ps1"
      - name: Test mcquic
        run: |
          C:\Miniconda\shell\condabin\conda-hook.ps1
          conda init powershell
          "if (test-path $PROFILE.CurrentUserAllHosts) { & $PROFILE.CurrentUserAllHosts}"
          conda activate mcquic
          mcquic -qp 2 assets/sample.png ./
          mcquic ./sample.mcq ./
          mcquic --help
          mcquic train --help
          mcquic validate --help
          mcquic dataset --help
          mcquic-train --help
          mcquic-validate --help
          mcquic-dataset --help
      - name: Test complete
        run: echo "All install test completed."
  test-conda-installation:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.8", "3.9", "3.10"]
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: true
          activate-environment: ""
      - name: Install and test mcquic (windows)
        if: matrix.os == 'windows-latest'
        run: |
          C:\Miniconda\shell\condabin\conda-hook.ps1
          conda init powershell
          "if (test-path $PROFILE.CurrentUserAllHosts) { & $PROFILE.CurrentUserAllHosts}"
          conda activate
          conda install -y "python=${{ matrix.python-version }}" "torchvision>=0.12,<1" "pytorch>=1.11,<2" -c pytorch
          conda install -y mcquic -c xiaosu-zhu -c conda-forge
          mcquic -qp 2 assets/sample.png ./
          mcquic ./sample.mcq ./
          mcquic --help
          mcquic train --help
          mcquic validate --help
          mcquic dataset --help
          mcquic-train --help
          mcquic-validate --help
          mcquic-dataset --help
      - name: Install and test mcquic (posix)
        if: matrix.os != 'windows-latest'
        run: |
          eval "$(conda shell.bash hook)"
          conda activate
          conda install -y "python=${{ matrix.python-version }}" "torchvision>=0.12,<1" "pytorch>=1.11,<2" -c pytorch
          conda install -y mcquic -c xiaosu-zhu -c conda-forge
          mcquic -qp 2 assets/sample.png ./
          mcquic ./sample.mcq ./
          mcquic --help
          mcquic train --help
          mcquic validate --help
          mcquic dataset --help
          mcquic-train --help
          mcquic-validate --help
          mcquic-dataset --help
      - name: Test complete
        run: echo "All install test completed."
  test-docker:
    runs-on: ubuntu-latest
    container: ghcr.io/xiaosu-zhu/mcquic:main
    steps:
      - run: |
          mcquic -qp 2 /workspace/mcquic/assets/sample.png
          mcquic --help
          mcquic train --help
          mcquic validate --help
          mcquic dataset --help
          mcquic-train --help
          mcquic-validate --help
          mcquic-dataset --help
